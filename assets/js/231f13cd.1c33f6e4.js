"use strict";(self.webpackChunk_documentation_serenity_js_org=self.webpackChunk_documentation_serenity_js_org||[]).push([[11804],{43636:(e,t,n)=>{n.d(t,{Iu:()=>y,yg:()=>d});var r=n(85668);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},y=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,p=e.parentName,y=o(e,["components","mdxType","originalType","parentName"]),u=l(n),g=s,d=u["".concat(p,".").concat(g)]||u[g]||c[g]||a;return n?r.createElement(d,i(i({ref:t},y),{},{components:n})):r.createElement(d,i({ref:t},y))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},86976:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=n(15307),s=(n(85668),n(43636));const a={sidebar_position:4,title:"Verifying responses"},i="Verifying responses",o={unversionedId:"api-testing/verifying-responses",id:"api-testing/verifying-responses",title:"Verifying responses",description:"With Serenity/JS, you can verify responses to your API requests using LastResponse",source:"@site/docs/api-testing/verifying-responses.mdx",sourceDirName:"api-testing",slug:"/api-testing/verifying-responses",permalink:"/handbook/api-testing/verifying-responses",draft:!1,editUrl:"https://github.com/serenity-js/serenity-js/tree/main/documentation/serenity-js.org/docs/api-testing/verifying-responses.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Verifying responses"},sidebar:"tutorialSidebar",previous:{title:"Sending requests",permalink:"/handbook/api-testing/sending-requests"},next:{title:"Blended Testing",permalink:"/handbook/api-testing/blended-testing"}},p={},l=[{value:"Verifying the response status",id:"verifying-the-response-status",level:2},{value:"Verifying the response body",id:"verifying-the-response-body",level:2}],y={toc:l},u="wrapper";function c(e){let{components:t,...n}=e;return(0,s.yg)(u,(0,r.c)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("h1",{id:"verifying-responses"},"Verifying responses"),(0,s.yg)("p",null,"With Serenity/JS, you can verify responses to your API requests using ",(0,s.yg)("a",{parentName:"p",href:"/api/rest/class/LastResponse/"},(0,s.yg)("inlineCode",{parentName:"a"},"LastResponse")),"\nand the exact same ",(0,s.yg)("a",{parentName:"p",href:"/handbook/design/assertions/"},"Serenity/JS assertions"),"\nmodule you'd use for other kinds of test scenarios."),(0,s.yg)("p",null,"Check the ",(0,s.yg)("a",{parentName:"p",href:"/api/rest/class/LastResponse/"},(0,s.yg)("inlineCode",{parentName:"a"},"LastResponse"))," documentation for examples on how to extract interesting information from the response:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("a",{parentName:"li",href:"/api/rest/class/LastResponse/#status"},"extracting response status")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("a",{parentName:"li",href:"/api/rest/class/LastResponse/#body"},"extracting response body")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("a",{parentName:"li",href:"/api/rest/class/LastResponse/#headers"},"extracting response headers"))),(0,s.yg)("h2",{id:"verifying-the-response-status"},"Verifying the response status"),(0,s.yg)("p",null,"To extract the response status, instruct the actor to ",(0,s.yg)("a",{parentName:"p",href:"/api/rest/class/Send"},(0,s.yg)("inlineCode",{parentName:"a"},"Send"))," a ",(0,s.yg)("a",{parentName:"p",href:"/api/rest/class/HTTPRequest"},(0,s.yg)("inlineCode",{parentName:"a"},"HTTPRequest"))," and use ",(0,s.yg)("a",{parentName:"p",href:"/api/rest/class/LastResponse/#body"},(0,s.yg)("inlineCode",{parentName:"a"},"LastResponse.status()")),"."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-typescript"},"import { actorCalled } from '@serenity-js/core'\nimport { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\nimport { Ensure, equals } from '@serenity-js/assertions'\n\nawait actorCalled('Apisitt')\n  .whoCan(CallAnApi.at('https://api.example.org/'))\n  .attemptsTo(\n    Send.a(GetRequest.to('/books/0-688-00230-7')),\n    Ensure.that(LastResponse.status(), equals(200)),\n  )\n")),(0,s.yg)("h2",{id:"verifying-the-response-body"},"Verifying the response body"),(0,s.yg)("p",null,"To extract the response body, instruct the actor to ",(0,s.yg)("a",{parentName:"p",href:"/api/rest/class/Send"},(0,s.yg)("inlineCode",{parentName:"a"},"Send"))," a ",(0,s.yg)("a",{parentName:"p",href:"/api/rest/class/HTTPRequest"},(0,s.yg)("inlineCode",{parentName:"a"},"HTTPRequest"))," and use ",(0,s.yg)("a",{parentName:"p",href:"/api/rest/class/LastResponse/#body"},(0,s.yg)("inlineCode",{parentName:"a"},"LastResponse.body<T>()")),".\nHere ",(0,s.yg)("inlineCode",{parentName:"p"},"T")," is an optional generic parameter describing the shape of the response body."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-typescript"},"import { actorCalled } from '@serenity-js/core'\nimport { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\nimport { Ensure, equals } from '@serenity-js/assertions'\n\ninterface Book {\n    title: string;\n    author: string;\n}\n\nawait actorCalled('Apisitt')\n  .whoCan(CallAnApi.at('https://api.example.org/'))\n  .attemptsTo(\n    Send.a(GetRequest.to('/books/0-688-00230-7')),\n    Ensure.that(LastResponse.status(), equals(200)),\n    Ensure.that(LastResponse.header('Content-Type'), equals('application/json')),\n    Ensure.that(LastResponse.body<Book>(), equals({\n        title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n        author: 'Robert M. Pirsig',\n    })),\n  )\n")))}c.isMDXComponent=!0}}]);